// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model USERS {
  id Int @id @default(autoincrement())
  email String @unique
  nickname String @unique
  password String
  salt String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  img IMAGES[]
  likes LIKES[]
}

model IMAGES {
  id Int @id @default(autoincrement())
  title String
  iso String
  shutter_speed String
  aperture String
  location String
  img_url String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tags TAGS[]
  user_id Int
  user USERS @relation(fields: [user_id], references: [id], onDelete: Cascade)
  likes LIKES[]
}

model TAGS {
  id Int @id @default(autoincrement())
  name String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  images IMAGES[]
}

model LIKES {
  user_id Int
  image_id Int
  likedAt DateTime @default(now())
  user USERS @relation(fields: [user_id], references: [id], onDelete: Cascade)
  image IMAGES @relation(fields: [image_id], references: [id], onDelete: Cascade)

  @@id([user_id, image_id])
}
